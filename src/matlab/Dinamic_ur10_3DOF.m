%This file was atutomatically generated by --Generate_Dinamic--
%the input vector is:
%u=[q1 q2 q3 qp4 qp5 qp6 L1 L2 L4 L6 L7 L9 L3 L5 L8 L10 ]
%NOTE: The function --Genera_Robot_ur10_3DOF_Exe-- must be executed
%before running the simulink-simulator for the first time
function Qpp=Dinamic_ur10_3DOF(u)

%Joint Position
q1=u(1);
q2=u(2);
q3=u(3);

%Joint Velocity
qp1=u(4);
qp2=u(5);
qp3=u(6);

%Kinematic Parameters
L1=u(7);
L2=u(8);
L4=u(9);
L6=u(10);
L7=u(11);
L9=u(12);
L3=u(13);
L5=u(14);
L8=u(15);
L10=u(16);

%Dynamic Parameters
m1=u(17);
m2=u(18);
m3=u(19);

I111=u(20);
I112=u(21);
I113=u(22);
I122=u(23);
I123=u(24);
I133=u(25);

I211=u(26);
I212=u(27);
I213=u(28);
I222=u(29);
I223=u(30);
I233=u(31);

I311=u(32);
I312=u(33);
I313=u(34);
I322=u(35);
I323=u(36);
I333=u(37);

i111=I111;
i112=I112;
i113=I113;
i122=I122;
i123=I123;
i133=I133;

i211=I211;
i212=I212;
i213=I213;
i222=I222;
i223=I223;
i233=I233;

i311=I311;
i312=I312;
i313=I313;
i322=I322;
i323=I323;
i333=I333;

%Gravity
g=u(38);
%Time
t=u(39);
%Viscous Friction Matrix
Beta(1,1)=u(40);
Beta(2,2)=u(41);
Beta(3,3)=u(42);
%Gravity Vector
gx=u(43);
gy=u(44);
gz=u(45);


L0 = 0.1157;

%Joint Position Vector
Q=[q1; q2; q3];

%Joint Velocity Vector
Qp=[qp1; qp2; qp3];

%Complete the Inertia Matrix (symbolic form)
M = [i133 + i211/2 + i222/2 + i311/2 + i322/2 + i212*sin(2*q2) - (i311*cos(2*q2 + 2*q3))/2 + (i322*cos(2*q2 + 2*q3))/2 + i312*sin(2*q2 + 2*q3) + L0^2*m3 + L2^2*m3 + (L3^2*m3)/2 + L7^2*m2 + (L8^2*m2)/2 + L9^2*m3 + (L10^2*m3)/2 - (i211*cos(2*q2))/2 + (i222*cos(2*q2))/2 - 2*L0*L2*m3 - 2*L0*L9*m3 + 2*L2*L9*m3 + (L3^2*m3*cos(2*q2))/2 + (L8^2*m2*cos(2*q2))/2 + (L10^2*m3*cos(2*q2 + 2*q3))/2 + L3*L10*m3*cos(q3) + L3*L10*m3*cos(2*q2 + q3), L2*L10*m3*sin(q2 + q3) - i313*sin(q2 + q3) - i223*cos(q2) - i213*sin(q2) - L0*L10*m3*sin(q2 + q3) - i323*cos(q2 + q3) + L9*L10*m3*sin(q2 + q3) - L0*L3*m3*sin(q2) + L2*L3*m3*sin(q2) + L3*L9*m3*sin(q2) + L7*L8*m2*sin(q2), L2*L10*m3*sin(q2 + q3) - i313*sin(q2 + q3) - L0*L10*m3*sin(q2 + q3) - i323*cos(q2 + q3) + L9*L10*m3*sin(q2 + q3); L2*L10*m3*sin(q2 + q3) - i313*sin(q2 + q3) - i223*cos(q2) - i213*sin(q2) - L0*L10*m3*sin(q2 + q3) - i323*cos(q2 + q3) + L9*L10*m3*sin(q2 + q3) - L0*L3*m3*sin(q2) + L2*L3*m3*sin(q2) + L3*L9*m3*sin(q2) + L7*L8*m2*sin(q2), i233 + i333 + L3^2*m3 + L8^2*m2 + L10^2*m3 + 2*L3*L10*m3*cos(q3), i333 + L10^2*m3 + L3*L10*m3*cos(q3); L2*L10*m3*sin(q2 + q3) - i313*sin(q2 + q3) - L0*L10*m3*sin(q2 + q3) - i323*cos(q2 + q3) + L9*L10*m3*sin(q2 + q3), i333 + L10^2*m3 + L3*L10*m3*cos(q3), i333 + L10^2*m3];


%Complete Centripetal and Coriolis Matrix (symbolic form)
C = [- (qp3*(i322*sin(2*q2 + 2*q3) - i311*sin(2*q2 + 2*q3) - 2*i312*cos(2*q2 + 2*q3) + L10^2*m3*sin(2*q2 + 2*q3) + L3*L10*m3*sin(q3) + L3*L10*m3*sin(2*q2 + q3)))/2 - (qp2*(i222*sin(2*q2) - i211*sin(2*q2) - 2*i312*cos(2*q2 + 2*q3) - i311*sin(2*q2 + 2*q3) + i322*sin(2*q2 + 2*q3) - 2*i212*cos(2*q2) + L3^2*m3*sin(2*q2) + L8^2*m2*sin(2*q2) + L10^2*m3*sin(2*q2 + 2*q3) + 2*L3*L10*m3*sin(2*q2 + q3)))/2, i223*qp2*sin(q2) - i213*qp2*cos(q2) + i212*qp1*cos(2*q2) + (i211*qp1*sin(2*q2))/2 - (i222*qp1*sin(2*q2))/2 + i312*qp1*cos(2*q2 + 2*q3) + (i311*qp1*sin(2*q2 + 2*q3))/2 - (i322*qp1*sin(2*q2 + 2*q3))/2 - i313*qp2*cos(q2 + q3) - i313*qp3*cos(q2 + q3) + i323*qp2*sin(q2 + q3) + i323*qp3*sin(q2 + q3) - (L3^2*m3*qp1*sin(2*q2))/2 - (L8^2*m2*qp1*sin(2*q2))/2 - (L10^2*m3*qp1*sin(2*q2 + 2*q3))/2 - L0*L10*m3*qp2*cos(q2 + q3) - L0*L10*m3*qp3*cos(q2 + q3) + L2*L10*m3*qp2*cos(q2 + q3) + L2*L10*m3*qp3*cos(q2 + q3) + L9*L10*m3*qp2*cos(q2 + q3) + L9*L10*m3*qp3*cos(q2 + q3) - L0*L3*m3*qp2*cos(q2) + L2*L3*m3*qp2*cos(q2) + L3*L9*m3*qp2*cos(q2) + L7*L8*m2*qp2*cos(q2) - L3*L10*m3*qp1*sin(2*q2 + q3), i312*qp1*cos(2*q2 + 2*q3) + (i311*qp1*sin(2*q2 + 2*q3))/2 - (i322*qp1*sin(2*q2 + 2*q3))/2 - i313*qp2*cos(q2 + q3) - i313*qp3*cos(q2 + q3) + i323*qp2*sin(q2 + q3) + i323*qp3*sin(q2 + q3) - (L10^2*m3*qp1*sin(2*q2 + 2*q3))/2 - L0*L10*m3*qp2*cos(q2 + q3) - L0*L10*m3*qp3*cos(q2 + q3) + L2*L10*m3*qp2*cos(q2 + q3) + L2*L10*m3*qp3*cos(q2 + q3) + L9*L10*m3*qp2*cos(q2 + q3) + L9*L10*m3*qp3*cos(q2 + q3) - (L3*L10*m3*qp1*sin(q3))/2 - (L3*L10*m3*qp1*sin(2*q2 + q3))/2; (qp1*(i222*sin(2*q2) - i211*sin(2*q2) - 2*i312*cos(2*q2 + 2*q3) - i311*sin(2*q2 + 2*q3) + i322*sin(2*q2 + 2*q3) - 2*i212*cos(2*q2) + L3^2*m3*sin(2*q2) + L8^2*m2*sin(2*q2) + L10^2*m3*sin(2*q2 + 2*q3) + 2*L3*L10*m3*sin(2*q2 + q3)))/2, -L3*L10*m3*qp3*sin(q3), -L3*L10*m3*sin(q3)*(qp2 + qp3); (qp1*(i322*sin(2*q2 + 2*q3) - i311*sin(2*q2 + 2*q3) - 2*i312*cos(2*q2 + 2*q3) + L10^2*m3*sin(2*q2 + 2*q3) + L3*L10*m3*sin(q3) + L3*L10*m3*sin(2*q2 + q3)))/2, L3*L10*m3*qp2*sin(q3), 0];


%Complete Gravitational Torques Vector (symbolic form)
G = [- gy*m3*(sin(q1)*(L2 - L0 + L9) - L3*cos(q1)*cos(q2) - L10*cos(q1)*cos(q2)*cos(q3) + L10*cos(q1)*sin(q2)*sin(q3)) - gx*m3*(cos(q1)*(L2 - L0 + L9) + L3*cos(q2)*sin(q1) + L10*cos(q2)*cos(q3)*sin(q1) - L10*sin(q1)*sin(q2)*sin(q3)) - gx*m2*(L7*cos(q1) + L8*cos(q2)*sin(q1)) - gy*m2*(L7*sin(q1) - L8*cos(q1)*cos(q2)); - gz*m3*(L10*cos(q2 + q3) + L3*cos(q2)) - L8*gz*m2*cos(q2) - gx*m3*cos(q1)*(L10*sin(q2 + q3) + L3*sin(q2)) - gy*m3*sin(q1)*(L10*sin(q2 + q3) + L3*sin(q2)) - L8*gx*m2*cos(q1)*sin(q2) - L8*gy*m2*sin(q1)*sin(q2); -L10*m3*(gz*cos(q2 + q3) + gx*sin(q2 + q3)*cos(q1) + gy*sin(q2 + q3)*sin(q1))];


Tao=[u(46);u(47);u(48)];

Qpp=(M)\(Tao-C*Qp-G-Beta*Qp);
